// this code is autogenerated by ansvia-vscode extension.
// please don't edit this by hand
// use 'ansvia-vscode extension > Edit Model fields' instead.
import 'package:equatable/equatable.dart';
import 'package:meta/meta.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:pandemia_mobile/models/user_settings.dart';
import 'package:pandemia_mobile/util/string_extension.dart';

/// Model for User
@immutable
class User extends Equatable {
  final int id;
  final String fullName;
  final String email;
  final String phoneNum;
  final String village;
  final bool isSatgas;
  final UserSettings settings; // Nullable
  final LatLng loc; // Nullable
  final bool isBlocked;
  final bool isDeleted;
  final String locPath;
  final bool isMedic;

  User(
      this.id,
      this.fullName,
      this.email,
      this.phoneNum,
      this.village,
      this.isSatgas,
      this.settings,
      this.loc,
      this.isBlocked,
      this.isDeleted,
      this.locPath,
      this.isMedic)
      : super([
          id,
          fullName,
          email,
          phoneNum,
          village,
          isSatgas,
          settings,
          loc,
          isBlocked,
          isDeleted,
          locPath,
          isMedic
        ]);

  Map<String, dynamic> toMap() {
    Map<String, dynamic> data = Map();
    data["id"] = this.id;
    data["full_name"] = this.fullName;
    data["email"] = this.email;
    data["phone_num"] = this.phoneNum;
    data["village"] = this.village;
    data["is_satgas"] = this.isSatgas;
    data["settings"] = this.settings != null ? this.settings.toMap() : null;
    data["loc"] = this.loc != null ? this.loc.toMap() : null;
    data["is_blocked"] = this.isBlocked;
    data["is_deleted"] = this.isDeleted;
    data["loc_path"] = this.locPath;
    data["is_medic"] = this.isMedic;
    return data;
  }

  static User fromMap(Map<String, dynamic> data) {
    assert(data['full_name'] != null, "User.full_name is null");
    assert(data['email'] != null, "User.email is null");
    assert(data['phone_num'] != null, "User.phone_num is null");
    assert(data['village'] != null, "User.village is null");
    assert(data['is_satgas'] != null, "User.is_satgas is null");
    assert(data['is_blocked'] != null, "User.is_blocked is null");
    assert(data['is_deleted'] != null, "User.is_deleted is null");
    assert(data['loc_path'] != null, "User.loc_path is null");
    assert(data['is_medic'] != null, "User.is_medic is null");
    return User(
        data['id'] as int,
        data['full_name'] as String,
        data['email'] as String,
        data['phone_num'] as String,
        data['village'] as String,
        data['is_satgas'] as bool,
        data['settings'] != null
            ? UserSettings.fromMap(data['settings'])
            : null,
        data['loc'] != null
            ? LatLng(data['loc']['lat'], data['loc']['long'])
            : null,
        data['is_blocked'] as bool,
        data['is_deleted'] as bool,
        data['loc_path'] as String,
        data['is_medic'] as bool);
  }

  User copy(
      {String fullName,
      String email,
      String phoneNum,
      String village,
      bool isSatgas,
      UserSettings settings,
      LatLng loc,
      bool isBlocked,
      bool isDeleted,
      String locPath,
      bool isMedic}) {
    return User(
        this.id,
        fullName ?? this.fullName,
        email ?? this.email,
        phoneNum ?? this.phoneNum,
        village ?? this.village,
        isSatgas ?? this.isSatgas,
        settings ?? this.settings,
        loc ?? this.loc,
        isBlocked ?? this.isBlocked,
        isDeleted ?? this.isDeleted,
        locPath ?? this.locPath,
        isMedic ?? this.isMedic);
  }
}
