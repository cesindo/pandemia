// this code is autogenerated by ansvia-vscode extension.
// please don't edit this by hand
// use 'ansvia-vscode extension > Edit Model fields' instead.
import 'package:equatable/equatable.dart';
import 'package:meta/meta.dart';

/// Model for SubReport
@immutable
class SubReport extends Equatable {
  final int id;
  final int creatorId;
  final String creatorName;
  final String fullName;
  final int age;
  final String residenceAddress;
  final String gender;
  final String comingFrom;
  final String arrivalDate;
  final int healty;
  final String notes;
  final String status;
  final String ts;
  final String healthyNotes;
  final bool fromRedZone;
  final bool hasSymptoms;
  final bool traveler;

  SubReport(
      this.id,
      this.creatorId,
      this.creatorName,
      this.fullName,
      this.age,
      this.residenceAddress,
      this.gender,
      this.comingFrom,
      this.arrivalDate,
      this.healty,
      this.notes,
      this.status,
      this.ts,
      this.healthyNotes,
      this.fromRedZone,
      this.hasSymptoms,
      this.traveler)
      : super([
          id,
          creatorId,
          creatorName,
          fullName,
          age,
          residenceAddress,
          gender,
          comingFrom,
          arrivalDate,
          healty,
          notes,
          status,
          ts,
          healthyNotes,
          fromRedZone,
          hasSymptoms,
          traveler
        ]);

  Map<String, dynamic> toMap() {
    Map<String, dynamic> data = Map();
    data["id"] = this.id;
    data["creator_id"] = this.creatorId;
    data["creator_name"] = this.creatorName;
    data["full_name"] = this.fullName;
    data["age"] = this.age;
    data["residence_address"] = this.residenceAddress;
    data["gender"] = this.gender;
    data["coming_from"] = this.comingFrom;
    data["arrival_date"] = this.arrivalDate;
    data["healty"] = this.healty;
    data["notes"] = this.notes;
    data["status"] = this.status;
    data["ts"] = this.ts;
    data["healthy_notes"] = this.healthyNotes;
    data["from_red_zone"] = this.fromRedZone;
    data["has_symptoms"] = this.hasSymptoms;
    data["traveler"] = this.traveler;
    return data;
  }

  static SubReport fromMap(Map<String, dynamic> data) {
    assert(data['creator_id'] != null, "SubReport.creator_id is null");
    assert(data['creator_name'] != null, "SubReport.creator_name is null");
    assert(data['full_name'] != null, "SubReport.full_name is null");
    assert(data['age'] != null, "SubReport.age is null");
    assert(data['residence_address'] != null,
        "SubReport.residence_address is null");
    assert(data['gender'] != null, "SubReport.gender is null");
    assert(data['coming_from'] != null, "SubReport.coming_from is null");
    assert(data['arrival_date'] != null, "SubReport.arrival_date is null");
    assert(data['healty'] != null, "SubReport.healty is null");
    assert(data['notes'] != null, "SubReport.notes is null");
    assert(data['status'] != null, "SubReport.status is null");
    assert(data['ts'] != null, "SubReport.ts is null");
    assert(data['healthy_notes'] != null, "SubReport.healthy_notes is null");
    assert(data['from_red_zone'] != null, "SubReport.from_red_zone is null");
    assert(data['has_symptoms'] != null, "SubReport.has_symptoms is null");
    assert(data['traveler'] != null, "SubReport.traveler is null");
    return SubReport(
        data['id'] as int,
        data['creator_id'] as int,
        data['creator_name'] as String,
        data['full_name'] as String,
        data['age'] as int,
        data['residence_address'] as String,
        data['gender'] as String,
        data['coming_from'] as String,
        data['arrival_date'] as String,
        data['healty'] as int,
        data['notes'] as String,
        data['status'] as String,
        data['ts'] as String,
        data['healthy_notes'] as String,
        data['from_red_zone'] as bool,
        data['has_symptoms'] as bool,
        data['traveler'] as bool);
  }

  SubReport copy(
      {int creatorId,
      String creatorName,
      String fullName,
      int age,
      String residenceAddress,
      String gender,
      String comingFrom,
      String arrivalDate,
      int healty,
      String notes,
      String status,
      String ts,
      String healthyNotes,
      bool fromRedZone,
      bool hasSymptoms,
      bool traveler}) {
    return SubReport(
        this.id,
        creatorId ?? this.creatorId,
        creatorName ?? this.creatorName,
        fullName ?? this.fullName,
        age ?? this.age,
        residenceAddress ?? this.residenceAddress,
        gender ?? this.gender,
        comingFrom ?? this.comingFrom,
        arrivalDate ?? this.arrivalDate,
        healty ?? this.healty,
        notes ?? this.notes,
        status ?? this.status,
        ts ?? this.ts,
        healthyNotes ?? this.healthyNotes,
        fromRedZone ?? this.fromRedZone,
        hasSymptoms ?? this.hasSymptoms,
        traveler ?? this.traveler);
  }
}
